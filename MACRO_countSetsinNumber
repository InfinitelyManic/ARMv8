// count the set of digts in a number - nine digits only - excluding zero
.macro countSetsinNum num
.countSetsinNum\@:
push2 x1, x2
push2 x3, x4
push2 x5, x6
push2 x7, x9
push2 x9, x10
push2 x11, x12
        mov x12, \num           // mov number
        mov x1, xzr             // init to 0
        mov x2, xzr
        mov x3, xzr
        mov x4, xzr
        mov x5, xzr
        mov x6, xzr
        mov x7, xzr
        mov x8, xzr
        mov x9, xzr
        mov x10, 10             // base 10
        .L\@:
                mod x12, x10    // get remainder digit
                // account for the digits
                cmp x0, xzr
                beq .skip\@
                cmp x0, 1
                cinc x1, x1, eq
                beq .skip\@
                cmp x0, 2
                cinc x2, x2, eq
                beq .skip\@
                cmp x0, 3
                cinc x3, x3, eq
                beq .skip\@
                cmp x0, 4
                cinc x4, x4, eq
                beq .skip\@
                cmp x0, 5
                cinc x5, x5, eq
                beq .skip\@
                cmp x0, 6
                cinc x6, x6, eq
                beq .skip\@
                cmp x0, 7
                cinc x7, x7, eq
                beq .skip\@
                cmp x0, 8
                cinc x8, x8, eq
                beq .skip\@
                cmp x0, 9
                cinc x9, x9, eq
        .skip\@:
                intDiv x12, x10 // truncate number
                mov x12, x0     // copy new number
        cbnz x12, .L\@
        // set bit if any value > 1 was detected per digit
        cmp x1, 1
        cset x1, ge
        cmp x2, 1
        cset x2, ge
        cmp x3, 1
        cset x3, ge
        cmp x4, 1
        cset x4, ge
        cmp x5, 1
        cset x5, ge
        cmp x6, 1
        cset x6, ge
        cmp x7, 1
        cset x7, ge
        cmp x8, 1
        cset x8, ge
        cmp x9, 1
        cset x9, ge
        // count the sets
        add x0, x1, x2
        add x0, x0, x3
        add x0, x0, x4
        add x0, x0, x5
        add x0, x0, x6
        add x0, x0, x7
        add x0, x0, x8
        add x0, x0, x9
pop2 x11, x12
pop2 x9, x10
pop2 x7, x9
pop2 x5, x6
pop2 x3, x4
pop2 x1, x2
.endm
