// digitRev
.macro digitRev num
.digitRev\@:
push2 x1, x10
push2 x11, xzr
        mov x1, \num
        mov x10, 10
        mov x11, xzr
        .L\@:
                mod x1, x10
                add x11, x11, x0        // save remainder
                intDiv x1, x10          // truncate num
                cbz x0, .exit\@         // if 0 then we are done
                mov x1, x0              // get new num
                mul x11, x11, x10       // inflate num
                cbnz x1, .L\@           // conditional branch is x1 is not 0
.exit\@:
        mov x0, x11                     // return
pop2 x11, xzr
pop2 x1, x10
.endm
